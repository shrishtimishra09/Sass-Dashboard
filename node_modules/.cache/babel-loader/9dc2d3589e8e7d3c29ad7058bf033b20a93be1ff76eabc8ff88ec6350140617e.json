{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\contracts-dashboard\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = (username, password) => {\n    // Mock auth: any username, password must be test123\n    if (password === \"test123\") {\n      const mockToken = \"mock-jwt-token\";\n      setUser({\n        username,\n        token: mockToken\n      });\n      localStorage.setItem(\"user\", JSON.stringify({\n        username,\n        token: mockToken\n      }));\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// ✅ Custom hook you can import in App.js\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","username","password","mockToken","token","localStorage","setItem","JSON","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/contracts-dashboard/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (username, password) => {\r\n    // Mock auth: any username, password must be test123\r\n    if (password === \"test123\") {\r\n      const mockToken = \"mock-jwt-token\";\r\n      setUser({ username, token: mockToken });\r\n      localStorage.setItem(\"user\", JSON.stringify({ username, token: mockToken }));\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// ✅ Custom hook you can import in App.js\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC1B,MAAMC,SAAS,GAAG,gBAAgB;MAClCJ,OAAO,CAAC;QAAEE,QAAQ;QAAEG,KAAK,EAAED;MAAU,CAAC,CAAC;MACvCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEG,KAAK,EAAED;MAAU,CAAC,CAAC,CAAC;MAC5E,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBV,OAAO,CAAC,IAAI,CAAC;IACbM,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEE,KAAK;MAAES;IAAO,CAAE;IAAAb,QAAA,EAClDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAnB,EAAA,CA1BgBF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA2B5B,OAAO,SAASuB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO7B,UAAU,CAACI,WAAW,CAAC;AAChC;AAACyB,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}