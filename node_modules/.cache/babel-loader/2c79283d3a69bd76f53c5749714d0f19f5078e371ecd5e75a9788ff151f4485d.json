{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\contracts-dashboard\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const login = (username, password) => {\n    if (password === \"test123\") {\n      const mockToken = \"mock-jwt-token\";\n      setToken(mockToken);\n      localStorage.setItem(\"token\", mockToken);\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n  useEffect(() => {\n    const saved = localStorage.getItem(\"token\");\n    if (saved) setToken(saved);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Q+aL11DnTzdNSb9hdmXn0SgiUDI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","login","username","password","mockToken","setItem","logout","removeItem","saved","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/contracts-dashboard/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n\r\n  const login = (username, password) => {\r\n    if (password === \"test123\") {\r\n      const mockToken = \"mock-jwt-token\";\r\n      setToken(mockToken);\r\n      localStorage.setItem(\"token\", mockToken);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem(\"token\");\r\n    if (saved) setToken(saved);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjE,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC1B,MAAMC,SAAS,GAAG,gBAAgB;MAClCN,QAAQ,CAACM,SAAS,CAAC;MACnBL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;MACxC,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBR,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGT,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIQ,KAAK,EAAEV,QAAQ,CAACU,KAAK,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEI,KAAK;MAAEK;IAAO,CAAE;IAAAX,QAAA,EACnDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA5BWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}