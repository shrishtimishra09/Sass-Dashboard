{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\contracts-dashboard\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const saved = localStorage.getItem(\"user\");\n    return saved ? JSON.parse(saved) : null;\n  });\n  const login = (username, password) => {\n    if (password === \"test123\") {\n      const mockUser = {\n        username,\n        token: \"mock-jwt-token\"\n      };\n      setUser(mockUser);\n      localStorage.setItem(\"user\", JSON.stringify(mockUser));\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ Custom hook for easy access\n_s(AuthProvider, \"j/TDgaE6lNi2p5cPBVwErfsb4Xo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","saved","localStorage","getItem","JSON","parse","login","username","password","mockUser","token","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/contracts-dashboard/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const saved = localStorage.getItem(\"user\");\r\n    return saved ? JSON.parse(saved) : null;\r\n  });\r\n\r\n  const login = (username, password) => {\r\n    if (password === \"test123\") {\r\n      const mockUser = { username, token: \"mock-jwt-token\" };\r\n      setUser(mockUser);\r\n      localStorage.setItem(\"user\", JSON.stringify(mockUser));\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// ✅ Custom hook for easy access\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACrC,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC1C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,IAAI;EACzC,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC1B,MAAMC,QAAQ,GAAG;QAAEF,QAAQ;QAAEG,KAAK,EAAE;MAAiB,CAAC;MACtDV,OAAO,CAACS,QAAQ,CAAC;MACjBP,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,QAAQ,CAAC,CAAC;MACtD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEO,KAAK;MAAEO;IAAO,CAAE;IAAAhB,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAtB,EAAA,CA5BaF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA6BzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMhC,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC4B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}